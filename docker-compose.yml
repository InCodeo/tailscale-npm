version: '3'

services:
  npm:
    build:
      context: ./npm
      dockerfile: Dockerfile
    container_name: npm
    restart: unless-stopped
    # Required for Tailscale to modify network settings
    privileged: true
    cap_add:
      - NET_ADMIN
    volumes:
      # Standard NPM volumes
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
      # Required Tailscale volumes
      - /var/run/tailscale:/var/run/tailscale
      - tailscale_npm:/var/lib/tailscale
      # Optional: Mount TUN device if not using privileged mode
      # - /dev/net/tun:/dev/net/tun
    ports:
      - '80:80'   # HTTP
      - '81:81'   # Admin UI
      - '443:443' # HTTPS
    environment:
      # Database configuration
      DB_MYSQL_HOST: "npm-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "${NPM_DB_PASSWORD}"
      DB_MYSQL_NAME: "npm"
      # Tailscale configuration
      TAILSCALE_AUTH_KEY: "${TAILSCALE_AUTH_KEY}"
      # Optional: Additional NPM configurations
      # DISABLE_IPV6: 'true'
      # FORCE_HTTPS: 'true'
    depends_on:
      - npm-db
    networks:
      - npm_network

  npm-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: npm-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "npm"
      MYSQL_USER: "npm"
      MYSQL_PASSWORD: "${NPM_DB_PASSWORD}"
    volumes:
      - npm_db_data:/var/lib/mysql
    networks:
      - npm_network
    # Optional: Healthcheck for database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  npm_data:
    name: npm_data
  npm_letsencrypt:
    name: npm_letsencrypt
  npm_db_data:
    name: npm_db_data
  tailscale_npm:
    name: tailscale_npm

networks:
  npm_network:
    driver: bridge
    # Optional: Configure specific subnet
    # ipam:
    #   config:
    #     - subnet: 172.20.0.0/16